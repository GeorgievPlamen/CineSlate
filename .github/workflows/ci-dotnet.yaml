name: .NET CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'Server/**'
  pull_request:
    paths:
      - 'Server/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Add solution
        working-directory: ./Server
        run: dotnet new sln

      - name: Add projects to solution
        working-directory: ./Server
        run: dotnet sln add **/**/*.csproj

      - name: Restore dependencies
        working-directory: ./Server
        run: dotnet restore

      - name: Build
        working-directory: ./Server
        run: dotnet build --no-restore --configuration Release

      - name: Test
        working-directory: ./Server
        run: dotnet test --no-build --configuration Release

  docker_push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3    

      - name: Build And Push
        uses: docker/build-push-action@v6
        with:
          context: ./Server
          file: ./Server/Dockerfile
          push: true
          tags: georgievp/cineslate:latest
          
  deploy:
    needs: docker_push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    steps:
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: cineslate-api
          images: 'georgievp/cineslate:latest'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        env:
          ApiKeys.TMDBKey: "testing"
