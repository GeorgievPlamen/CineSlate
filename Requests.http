@Api_HostAddress = http://localhost:5000/api/
# @Api_HostAddress = http://localhost:8080/api/ 
// 5000 for local development.
// 8080 for docker development.

@Token = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5MWMyNzc2ZC03ODA2LTQyNzctOTRjOS1lNjIwNzA5YWZhZGIiLCJlbWFpbCI6ImpvaG5AdGVzdC5jb20iLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJqb2huIERvZTExMiM5MWMyNyIsImp0aSI6IjkwYTNjOWU3LTVjM2YtNDMwZi04MjA3LTY1ZGE2ZWZjNWRmYSIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6IlVzZXIiLCJleHAiOjE3NDA0NzM4ODUsImlzcyI6IkNpbmVTbGF0ZSIsImF1ZCI6IkNpbmVTbGF0ZSJ9.eG_YRDyO-FdqfM4jscz-V8QHflYa6M5uXQAw_CVgMFo

### Login Success

POST {{Api_HostAddress}}users/login HTTP/1.1
content-type: application/json

{
    "email": "john@test.com",
    "password": "SuperS3cre7!"
}

### Login Fail

POST {{Api_HostAddress}}users/login HTTP/1.1
content-type: application/json

{
    "email": "123123@test.com",
    "password": "Sup3r"
}

### Refresh Token

POST {{Api_HostAddress}}users/refresh-token HTTP/1.1
content-type: application/json

{
    "refreshToken": "Pwehkpf3+k9L0PAlHwa/ERv1tMir5XzBEqwc7JSOyLw="
}

### Register Success

POST {{Api_HostAddress}}users/register HTTP/1.1
content-type: application/json

{
    "username": "john Doe112",
    "email": "john@test.com",
    "password": "SuperS3cre7!"
}

### Register Fail

POST {{Api_HostAddress}}users/register HTTP/1.1
content-type: application/json

{
    "username": "JohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohnJohn",
    "email": "johnm",
    "password": "badPassword"
}

### Movies List

GET {{Api_HostAddress}}movies/now_playing?page=1
content-type: application/json
Authorization: {{Token}}

### Movies Details

GET {{Api_HostAddress}}movies/939243
content-type: application/json
Authorization: {{Token}}

### Admin Test

GET {{Api_HostAddress}}admin 
content-type: application/json
Authorization: {{Token}}

### Me 

GET {{Api_HostAddress}}users/me HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Users Latest - Paged 

GET {{Api_HostAddress}}users/1 HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### User Update

PUT {{Api_HostAddress}}users/91c2776d-7806-4277-94c9-e620709afadb?bio=test HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Users By Id 

POST {{Api_HostAddress}}users/ HTTP/1.1
content-type: application/json
Authorization: {{Token}}

{
    "UserIds": ["91c2776d-7806-4277-94c9-e620709afadb"]
}

### Review Latest 

GET {{Api_HostAddress}}reviews/?page=1 HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Owned Review by movie Id

GET {{Api_HostAddress}}reviews/own/645757 HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Reviews By Movie Id 

GET {{Api_HostAddress}}reviews/645757?page=1 HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Review Update 

PUT {{Api_HostAddress}}reviews/ HTTP/1.1
content-type: application/json
Authorization: {{Token}}

{
    "reviewId": "4d766144-6da5-49d3-9971-a92eec016ca7",
    "rating": 4,
    "text": "It had a nice ending.",
    "containsSpoilers": true
}

### Review Delete 

DELETE  {{Api_HostAddress}}reviews/31640b26-60b2-4fea-8058-7335954c640f HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Review Create 

POST   {{Api_HostAddress}}reviews/ HTTP/1.1
content-type: application/json
Authorization: {{Token}}

{
    "rating": 2,
    "movieId": 845781,
    "text": "Did not like it...",
    "containsSpoilers": false
}

### Review By UserId 

GET   {{Api_HostAddress}}reviews/user/f9aa315b-d5d1-4ca8-86f1-77b85b806084?page=1 HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Review By Id 

GET   {{Api_HostAddress}}reviews/details/ed78f023-2fde-46b2-a805-f5d08737fe23 HTTP/1.1
content-type: application/json
Authorization: {{Token}}

### Like Review

POST {{Api_HostAddress}}reviews/like/ed78f023-2fde-46b2-a805-f5d08737fe23 HTTP/1.1
Content-Type: application/json
Authorization: {{Token}}